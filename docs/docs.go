// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "captain@metrogalaxy.io"
        },
        "license": {
            "name": "Business Source License 1.1",
            "url": "https://spdx.org/licenses/BUSL-1.1.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accessories/list": {
            "post": {
                "description": "Get list accessories with filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accessories"
                ],
                "summary": "Get list accessories",
                "operationId": "accessories-list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListAccessoriesOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metronion/activities": {
            "get": {
                "description": "Get history activities of Metronion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metronion"
                ],
                "summary": "Get history activities of Metronion",
                "operationId": "metronion-activities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Metronion ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.MetronionActivitiesOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metronion/list": {
            "post": {
                "description": "Get list Metronions with filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metronion"
                ],
                "summary": "Get list Metronions",
                "operationId": "metronion-list",
                "parameters": [
                    {
                        "description": "Request params",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.ListMetronionsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListMetronionsOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metronion/metronionInfo": {
            "get": {
                "description": "Get info of specific Metronion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metronion"
                ],
                "summary": "Get info of specific Metronion",
                "operationId": "metronion-info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Metronion ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.MetronionInfoOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/metronion/offers": {
            "get": {
                "description": "Get current offers for specific Metronion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metronion"
                ],
                "summary": "Get current offers for specific Metronion",
                "operationId": "metronion-offers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Metronion ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.MetronionOffersOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "api.ListAccessoriesOutput": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.AccessoriesInfoApi"
                    }
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "api.ListMetronionsInput": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "gender": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string"
                },
                "stat": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ListMetronionsOutput": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.MetronionInfoApi"
                    }
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "api.MetronionActivitiesOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.MetronionActivityApi"
                    }
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "api.MetronionInfoOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/services.MetronionInfoApi"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "api.MetronionOffersOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.MetronionOffersApi"
                    }
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "services.AccessoriesInfoApi": {
            "type": "object",
            "properties": {
                "createdAtBlock": {
                    "type": "integer"
                },
                "createdAtTimestamp": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rarity_id": {
                    "type": "integer"
                },
                "rarity_name": {
                    "type": "string"
                },
                "stats": {
                    "$ref": "#/definitions/services.Stats"
                },
                "type_id": {
                    "type": "integer"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "services.MetronionActivityApi": {
            "type": "object",
            "properties": {
                "activityType": {
                    "type": "string"
                },
                "blockNumber": {
                    "type": "integer"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "services.MetronionInfoApi": {
            "type": "object",
            "properties": {
                "baseStats": {
                    "$ref": "#/definitions/services.Stats"
                },
                "createdAtBlock": {
                    "type": "integer"
                },
                "createdAtTimestamp": {
                    "type": "integer"
                },
                "currentPrice": {
                    "type": "number"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "lastPrice": {
                    "type": "number"
                },
                "listedBy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "specialStar": {
                    "type": "integer"
                },
                "specialStats": {
                    "$ref": "#/definitions/services.Stats"
                },
                "star": {
                    "type": "integer"
                },
                "topBid": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "updatedAtBlock": {
                    "type": "integer"
                },
                "updatedAtTimestamp": {
                    "type": "integer"
                },
                "versionId": {
                    "type": "integer"
                },
                "wearables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.MetronionWearableApi"
                    }
                }
            }
        },
        "services.MetronionOffersApi": {
            "type": "object",
            "properties": {
                "blockNumber": {
                    "type": "integer"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "services.MetronionWearableApi": {
            "type": "object",
            "properties": {
                "changeable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "isOrigin": {
                    "type": "boolean"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "services.Stats": {
            "type": "object",
            "properties": {
                "charisma": {
                    "type": "integer"
                },
                "creativity": {
                    "type": "integer"
                },
                "fitness": {
                    "type": "integer"
                },
                "intellect": {
                    "type": "integer"
                },
                "resolve": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MetroGalaxy API",
	Description:      "MetroGalaxy API specifications",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
